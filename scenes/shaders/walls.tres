[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://assets/textures/Carpet1.png" type="Texture" id=1]
[ext_resource path="res://assets/textures/Drywall.PNG" type="Texture" id=2]
[ext_resource path="res://assets/textures/Ceiling.PNG" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode cull_disabled;



uniform float wallsScale : hint_range(0, 4);
uniform float floorsScale : hint_range(0, 4);
uniform float ceilingScale : hint_range(0, 4);
uniform sampler2D walls;
uniform sampler2D floors;
uniform sampler2D ceiling;

void vertext() {
	
}

void fragment() {
	vec4 wrld_vertex = CAMERA_MATRIX * vec4(VERTEX, 1.0);
	NORMAL *= mat3(INV_CAMERA_MATRIX);
	vec2 wallsUV = vec2(wrld_vertex.xy) + vec2(wrld_vertex.z,0.0);
	vec4 wallText = texture(walls, wallsUV / 4.0 * wallsScale);
	vec4 floorsText = texture(floors, wrld_vertex.xz / 2.0 * floorsScale);
	vec4 ceilingText = texture(ceiling, wrld_vertex.xz / 2.0 * ceilingScale);
	if (NORMAL.y <= -0.9) {
		ALBEDO = ceilingText.rgb;
	}
	else if (NORMAL.y >= 0.9) {
		ALBEDO = floorsText.rgb;
	}
	else {
		ALBEDO = wallText.rgb; //mix(floorsText.rgb, , );
	}
}"

[resource]
shader = SubResource( 1 )
shader_param/wallsScale = 0.5
shader_param/floorsScale = 2.0
shader_param/ceilingScale = 2.0
shader_param/walls = ExtResource( 2 )
shader_param/floors = ExtResource( 1 )
shader_param/ceiling = ExtResource( 3 )
